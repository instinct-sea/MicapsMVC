//==================================================================== 
//**   解决方案或项目总名称
//====================================================================
//**   Copyright © 中国气象局 2018 -- Support 北京绘云天科技有限公司
//====================================================================
// 文件名称：BaseImages.cs
// 项目名称：请更改为实际项目名称
// 创建时间：2018-07-10 11:28:12
// 创建人员：宋杰军
// 负 责 人：宋杰军
// 参与人员：宋杰军
// ===================================================================
// 修改日期：
// 修改人员：
// 修改内容：
// ===================================================================
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;

namespace Meteo.Breeze.WebEngine.WinForm
{
	/// <summary>
	/// 基本图片素材提供者
	/// </summary>
	public static class ImageProvider
	{
		/// <summary>
		/// 我是一个向上的箭头
		/// </summary>
		public static class ArrowDown
		{
			/// <summary>
			/// 创建
			/// </summary>
			/// <returns></returns>
			public static Image Create()
			{
				var data = new byte[] {
					137, 080, 078, 071, 013, 010, 026, 010, 000, 000, 000, 013, 073, 072, 068, 082,
					000, 000, 000, 010, 000, 000, 000, 006, 008, 006, 000, 000, 000, 250, 240, 015,
					198, 000, 000, 000, 191, 073, 068, 065, 084, 008, 215, 101, 202, 193, 078, 194,
					080, 016, 064, 209, 059, 180, 208, 130, 191, 164, 009, 137, 074, 132, 096, 140,
					137, 225, 051, 137, 009, 054, 096, 009, 032, 011, 255, 196, 164, 213, 165, 125,
					125, 237, 076, 193, 231, 206, 141, 139, 179, 059, 120, 239, 195, 102, 123, 008,
					102, 246, 079, 229, 092, 120, 221, 189, 005, 051, 011, 241, 115, 150, 083, 148,
					095, 084, 174, 230, 126, 122, 131, 136, 000, 160, 102, 172, 054, 059, 202, 242,
					147, 218, 121, 122, 183, 227, 043, 070, 023, 035, 062, 138, 130, 229, 106, 205,
					249, 252, 131, 170, 145, 229, 007, 084, 059, 210, 052, 229, 122, 124, 137, 168,
					106, 248, 174, 028, 203, 151, 156, 174, 051, 004, 072, 135, 067, 146, 036, 065,
					091, 101, 241, 056, 163, 031, 199, 072, 219, 182, 065, 068, 112, 181, 039, 219,
					030, 025, 012, 250, 136, 244, 240, 222, 179, 120, 184, 035, 138, 034, 000, 164,
					105, 154, 000, 032, 034, 212, 190, 097, 189, 127, 231, 116, 050, 158, 230, 147,
					191, 004, 240, 011, 131, 032, 116, 042, 192, 252, 107, 013, 000, 000, 000, 000,
					073, 069, 078, 068, 174, 066, 096, 130
				};
				using (var stream = new MemoryStream(data))
				{
					return Image.FromStream(stream);
				}
			}
		}
		/// <summary>
		/// 我是一个向下的箭头
		/// </summary>
		public static class ArrowUp
		{
			/// <summary>
			/// 创建
			/// </summary>
			/// <returns></returns>
			public static Image Create()
			{
				var data = new byte[] {
					137, 080, 078, 071, 013, 010, 026, 010, 000, 000, 000, 013, 073, 072, 068, 082,
					000, 000, 000, 010, 000, 000, 000, 006, 008, 006, 000, 000, 000, 250, 240, 015,
					198, 000, 000, 000, 212, 073, 068, 065, 084, 008, 215, 061, 138, 049, 074, 003,
					081, 020, 000, 231, 175, 017, 179, 113, 085, 004, 075, 033, 224, 037, 210, 040,
					068, 193, 198, 019, 040, 196, 020, 081, 016, 111, 145, 147, 216, 216, 088, 088,
					008, 138, 024, 037, 068, 020, 241, 038, 145, 036, 133, 136, 251, 222, 255, 127,
					093, 125, 022, 154, 012, 076, 053, 227, 138, 162, 048, 254, 017, 245, 156, 157,
					095, 080, 150, 037, 167, 071, 109, 170, 213, 133, 105, 194, 197, 024, 013, 064,
					068, 185, 188, 190, 099, 190, 082, 065, 069, 016, 081, 078, 058, 173, 217, 236,
					098, 140, 150, 231, 194, 213, 109, 159, 044, 171, 241, 099, 070, 008, 225, 111,
					086, 229, 184, 125, 192, 098, 045, 197, 141, 198, 019, 187, 185, 127, 036, 077,
					083, 086, 150, 050, 118, 182, 026, 152, 025, 189, 193, 011, 195, 225, 027, 170,
					066, 231, 112, 159, 185, 230, 238, 094, 247, 171, 252, 102, 109, 117, 153, 237,
					205, 006, 206, 057, 146, 036, 097, 163, 190, 206, 251, 199, 039, 121, 046, 140,
					198, 019, 008, 033, 088, 255, 233, 213, 084, 213, 188, 247, 051, 067, 008, 166,
					170, 246, 048, 120, 054, 239, 189, 253, 002, 218, 098, 121, 049, 240, 136, 172,
					109, 000, 000, 000, 000, 073, 069, 078, 068, 174, 066, 096, 130
				};
				using (var stream = new MemoryStream(data))
				{
					return Image.FromStream(stream);
				}
			}
		}
		/// <summary>
		/// 我是一个叉
		/// </summary>
		public static class Cross
		{
			/// <summary>
			/// 创建
			/// </summary>
			/// <returns></returns>
			public static Image Create()
			{
				var data = new byte[] {
					137, 080, 078, 071, 013, 010, 026, 010, 000, 000, 000, 013, 073, 072, 068, 082,
					000, 000, 000, 010, 000, 000, 000, 010, 008, 006, 000, 000, 000, 141, 050, 207,
					189, 000, 000, 000, 163, 073, 068, 065, 084, 024, 211, 117, 206, 177, 013, 131,
					048, 020, 004, 208, 051, 158, 129, 009, 104, 088, 009, 240, 014, 172, 144, 029,
					040, 024, 008, 144, 063, 244, 236, 113, 013, 165, 117, 041, 018, 035, 130, 200,
					073, 191, 186, 247, 165, 067, 008, 065, 219, 182, 137, 228, 227, 153, 153, 154,
					166, 017, 166, 105, 082, 008, 065, 235, 186, 254, 069, 049, 070, 129, 164, 158,
					240, 021, 145, 252, 064, 146, 154, 231, 089, 121, 070, 070, 102, 118, 062, 058,
					146, 194, 055, 251, 190, 099, 028, 071, 164, 148, 208, 247, 061, 234, 186, 206,
					021, 010, 092, 226, 189, 071, 074, 009, 069, 081, 192, 057, 135, 159, 220, 055,
					153, 153, 150, 101, 081, 215, 117, 063, 155, 113, 071, 185, 136, 049, 170, 109,
					219, 019, 227, 009, 221, 177, 153, 201, 031, 199, 241, 186, 015, 207, 041, 203,
					018, 085, 085, 097, 024, 006, 188, 001, 180, 027, 253, 017, 242, 216, 173, 066,
					000, 000, 000, 000, 073, 069, 078, 068, 174, 066, 096, 130
				};
				using (var stream = new MemoryStream(data))
				{
					return Image.FromStream(stream);
				}
			}
		}
		/// <summary>
		/// 我是一个LOGO
		/// </summary>
		public static class CMALogo
		{
			/// <summary>
			/// 创建
			/// </summary>
			/// <returns></returns>
			public static Image Create()
			{
				var data = new byte[] {
					137, 80, 78, 71, 13, 10, 26, 10, 0, 0, 0, 13, 73, 72, 68, 82, 0, 0, 0, 49, 0, 0, 0, 49,
					8, 6, 0, 0, 0, 115, 156, 65, 28, 0, 0, 0, 1, 115, 82, 71, 66, 0, 174, 206, 28, 233, 0, 0,
					0, 4, 103, 65, 77, 65, 0, 0, 177, 143, 11, 252, 97, 5, 0, 0, 0, 25, 116, 69, 88, 116, 83,
					111, 102, 116, 119, 97, 114, 101, 0, 65, 100, 111, 98, 101, 32, 73, 109, 97, 103, 101, 82,
					101, 97, 100, 121, 113, 201, 101, 60, 0, 0, 7, 88, 73, 68, 65, 84, 104, 67, 181, 215, 123,
					112, 150, 197, 21, 199, 241, 39, 33, 137, 24, 210, 162, 68, 16, 84, 76, 163, 117, 70, 160,
					37, 40, 80, 64, 64, 177, 160, 164, 164, 82, 180, 81, 170, 84, 171, 70, 185, 233, 128, 131,
					152, 18, 218, 166, 72, 213, 233, 84, 69, 2, 150, 107, 129, 98, 45, 3, 1, 13, 247, 91, 49, 16,
					10, 8, 132, 64, 169, 33, 6, 209, 64, 188, 128, 151, 65, 13, 37, 66, 129, 100, 251, 61, 79,
					158, 117, 150, 205, 190, 121, 47, 208, 63, 62, 51, 239, 158, 61, 231, 183, 207, 201, 95, 224,
					41, 165, 188, 39, 202, 62, 188, 80, 109, 112, 39, 242, 176, 24, 111, 163, 28, 53, 56, 17, 248,
					12, 82, 95, 138, 124, 100, 161, 45, 92, 121, 81, 185, 144, 37, 154, 227, 14, 44, 196, 81, 168,
					24, 124, 10, 89, 58, 27, 205, 224, 122, 39, 172, 88, 150, 104, 137, 241, 56, 0, 215, 135, 197,
					106, 59, 70, 35, 9, 174, 119, 67, 138, 118, 137, 254, 248, 23, 92, 31, 113, 12, 155, 241, 103,
					140, 128, 252, 117, 7, 33, 19, 19, 33, 247, 171, 240, 39, 148, 225, 75, 184, 114, 118, 67, 102,
					92, 239, 59, 249, 75, 140, 222, 83, 29, 206, 119, 49, 21, 231, 160, 12, 103, 176, 14, 247, 163,
					13, 92, 179, 218, 117, 152, 140, 187, 131, 115, 26, 114, 240, 79, 152, 153, 162, 14, 243, 33,
					239, 218, 57, 141, 52, 44, 81, 202, 33, 180, 52, 108, 130, 178, 20, 161, 15, 92, 51, 161, 60,
					9, 153, 29, 100, 212, 196, 237, 120, 13, 246, 27, 91, 208, 9, 102, 111, 35, 254, 18, 163, 118,
					29, 9, 229, 102, 84, 67, 25, 42, 241, 115, 184, 250, 195, 121, 22, 146, 49, 207, 168, 153, 238,
					197, 65, 152, 239, 29, 69, 15, 184, 250, 125, 254, 18, 35, 119, 30, 118, 201, 192, 71, 80, 134,
					117, 104, 7, 87, 127, 56, 131, 241, 5, 234, 49, 36, 168, 137, 36, 92, 103, 156, 219, 98, 5,
					204, 119, 63, 199, 45, 208, 61, 231, 241, 151, 24, 177, 163, 202, 214, 14, 239, 67, 25, 10,
					144, 4, 87, 127, 83, 210, 49, 19, 102, 78, 28, 244, 125, 27, 76, 48, 206, 66, 238, 167, 193,
					124, 255, 24, 110, 128, 217, 231, 243, 151, 24, 190, 237, 3, 83, 34, 214, 66, 25, 94, 69, 51,
					216, 189, 161, 180, 68, 31, 188, 140, 207, 33, 25, 117, 200, 133, 217, 151, 140, 66, 204, 10,
					206, 113, 72, 8, 126, 139, 169, 48, 191, 99, 59, 82, 160, 239, 125, 254, 18, 143, 111, 125, 223,
					148, 11, 101, 88, 134, 120, 216, 125, 166, 14, 24, 142, 121, 216, 129, 106, 152, 25, 187, 144,
					1, 221, 159, 14, 233, 63, 136, 227, 232, 4, 125, 215, 30, 205, 141, 243, 108, 152, 89, 47, 66,
					223, 249, 252, 37, 114, 182, 28, 210, 58, 224, 63, 80, 129, 67, 72, 133, 217, 99, 186, 10, 139,
					112, 10, 122, 198, 101, 47, 102, 99, 5, 118, 226, 12, 164, 126, 4, 189, 97, 102, 246, 66, 103,
					227, 156, 4, 153, 209, 89, 103, 113, 27, 190, 157, 241, 151, 120, 180, 248, 61, 109, 49, 84, 224,
					44, 6, 193, 188, 183, 189, 0, 221, 31, 141, 143, 49, 9, 169, 176, 51, 115, 240, 75, 171, 214, 9,
					95, 65, 207, 239, 66, 18, 252, 123, 127, 137, 71, 54, 29, 20, 253, 161, 12, 127, 135, 190, 11,
					229, 5, 152, 51, 161, 84, 161, 8, 207, 35, 11, 173, 224, 202, 19, 203, 240, 184, 85, 19, 249,
					48, 51, 135, 194, 191, 243, 151, 120, 120, 99, 165, 88, 11, 21, 56, 129, 239, 67, 223, 133, 210,
					22, 43, 33, 51, 95, 161, 58, 248, 109, 155, 131, 68, 184, 50, 76, 105, 248, 26, 125, 141, 154,
					214, 2, 149, 208, 153, 165, 72, 64, 195, 18, 15, 173, 127, 247, 70, 156, 130, 10, 204, 132, 212,
					35, 213, 13, 215, 96, 50, 116, 134, 173, 10, 247, 195, 53, 47, 226, 177, 25, 31, 34, 37, 168, 217,
					158, 128, 153, 57, 0, 13, 75, 60, 184, 166, 226, 105, 168, 64, 61, 186, 65, 234, 225, 36, 226,
					122, 220, 141, 101, 56, 11, 157, 99, 171, 197, 175, 224, 202, 105, 137, 215, 32, 125, 67, 131,
					154, 75, 42, 62, 131, 206, 156, 11, 207, 27, 182, 170, 60, 30, 37, 80, 129, 109, 184, 4, 189, 48,
					16, 89, 248, 41, 30, 194, 83, 120, 14, 127, 193, 26, 188, 139, 83, 208, 179, 218, 73, 148, 163, 8,
					83, 240, 24, 210, 33, 239, 153, 18, 48, 4, 251, 81, 135, 73, 176, 123, 108, 11, 160, 223, 57, 140,
					20, 239, 129, 229, 239, 92, 143, 90, 168, 192, 38, 172, 53, 206, 145, 248, 4, 171, 144, 135, 129, 72,
					67, 51, 72, 190, 173, 5, 50, 48, 30, 101, 208, 25, 197, 136, 135, 107, 198, 52, 24, 122, 166, 14,
					63, 242, 126, 241, 230, 191, 135, 66, 197, 224, 8, 10, 48, 0, 169, 144, 44, 91, 58, 228, 126, 24,
					94, 194, 74, 200, 156, 43, 239, 28, 14, 224, 1, 184, 178, 180, 171, 81, 3, 61, 55, 202, 27, 186,
					116, 127, 46, 84, 224, 40, 54, 24, 103, 151, 67, 24, 135, 86, 144, 121, 91, 15, 76, 193, 62, 212,
					194, 158, 63, 131, 26, 171, 102, 123, 20, 174, 108, 17, 135, 61, 208, 189, 179, 188, 123, 151, 236,
					123, 29, 42, 80, 136, 120, 76, 198, 167, 65, 205, 180, 4, 169, 144, 57, 91, 23, 172, 193, 57, 216,
					115, 37, 200, 197, 0, 164, 225, 42, 60, 141, 58, 216, 189, 226, 75, 180, 135, 235, 29, 177, 8, 186,
					119, 157, 151, 189, 104, 239, 6, 168, 192, 43, 144, 154, 104, 141, 108, 204, 199, 126, 108, 69, 115,
					232, 123, 211, 104, 212, 64, 231, 104, 165, 200, 132, 107, 230, 10, 212, 194, 158, 209, 238, 129, 107,
					78, 76, 135, 238, 219, 238, 221, 243, 183, 61, 155, 161, 2, 191, 133, 212, 108, 9, 72, 182, 106, 34,
					30, 191, 135, 158, 55, 205, 65, 10, 236, 25, 109, 32, 234, 224, 154, 21, 125, 225, 154, 19, 5, 208,
					125, 149, 222, 144, 133, 165, 91, 161, 2, 99, 33, 181, 72, 37, 226, 85, 232, 121, 109, 46, 92, 253,
					218, 149, 40, 135, 61, 167, 85, 224, 82, 184, 102, 197, 84, 232, 222, 42, 239, 103, 243, 119, 151,
					64, 5, 30, 131, 212, 162, 53, 0, 31, 65, 50, 42, 145, 12, 87, 159, 104, 133, 98, 232, 55, 93, 238,
					131, 107, 86, 155, 1, 221, 91, 225, 221, 53, 119, 231, 38, 168, 192, 48, 72, 45, 22, 63, 192, 113,
					140, 53, 106, 182, 155, 80, 10, 253, 158, 203, 51, 112, 205, 154, 150, 64, 247, 239, 240, 178, 102,
					189, 189, 0, 42, 48, 18, 82, 139, 213, 96, 164, 91, 53, 145, 140, 60, 212, 64, 191, 101, 59, 142, 28,
					216, 179, 182, 56, 236, 133, 158, 91, 237, 13, 154, 177, 125, 2, 84, 96, 34, 164, 118, 177, 180, 194,
					72, 188, 3, 253, 134, 203, 106, 116, 128, 43, 195, 214, 14, 53, 208, 179, 5, 94, 230, 244, 109, 67,
					160, 2, 51, 32, 181, 11, 117, 53, 242, 112, 24, 58, 219, 101, 39, 178, 225, 202, 8, 101, 48, 204, 140,
					28, 239, 206, 169, 91, 175, 197, 73, 40, 108, 132, 212, 98, 213, 17, 211, 241, 5, 36, 47, 148, 114, 60,
					136, 120, 184, 114, 154, 50, 7, 58, 167, 30, 55, 249, 255, 20, 191, 227, 229, 146, 45, 80, 56, 134, 239,
					64, 106, 209, 184, 18, 51, 240, 13, 36, 39, 148, 147, 120, 6, 201, 112, 229, 132, 35, 239, 28, 135, 206,
					59, 128, 68, 127, 137, 254, 47, 110, 25, 7, 133, 122, 244, 129, 212, 34, 149, 133, 42, 200, 124, 83, 62,
					64, 79, 184, 50, 34, 53, 30, 102, 230, 75, 104, 248, 79, 209, 237, 127, 44, 190, 22, 181, 80, 152, 4, 169,
					69, 226, 17, 212, 67, 230, 154, 82, 137, 52, 184, 50, 34, 149, 130, 195, 208, 153, 242, 110, 87, 52, 44, 209,
					239, 249, 183, 196, 2, 40, 84, 32, 33, 168, 53, 165, 63, 254, 11, 153, 105, 74, 13, 50, 224, 202, 136, 198, 115,
					48, 115, 139, 17, 135, 134, 37, 110, 253, 195, 63, 68, 71, 156, 134, 66, 191, 160, 22, 74, 10, 42, 33, 189,
					225, 140, 129, 43, 35, 26, 93, 160, 191, 77, 203, 132, 127, 239, 47, 209, 119, 210, 70, 109, 26, 20, 86, 24,
					53, 151, 251, 32, 125, 225, 84, 32, 9, 174, 140, 72, 37, 99, 31, 204, 220, 183, 16, 15, 191, 199, 95, 162, 119,
					254, 6, 237, 10, 124, 140, 122, 244, 14, 106, 46, 211, 160, 34, 32, 125, 174, 249, 104, 204, 131, 153, 121,
					26, 25, 248, 182, 199, 95, 226, 150, 223, 172, 55, 221, 5, 133, 18, 163, 102, 91, 12, 233, 9, 39, 15, 174, 249,
					72, 77, 129, 157, 249, 107, 156, 215, 231, 47, 209, 51, 111, 173, 45, 31, 10, 163, 140, 154, 105, 33, 228, 62,
					156, 2, 184, 230, 195, 105, 129, 191, 194, 206, 91, 142, 70, 253, 254, 18, 61, 114, 215, 184, 188, 14, 133,
					206, 70, 77, 123, 22, 114, 23, 78, 53, 90, 195, 158, 111, 74, 47, 148, 194, 206, 42, 195, 229, 104, 52, 227,
					47, 209, 125, 252, 106, 151, 68, 20, 225, 24, 218, 4, 53, 173, 59, 234, 161, 34, 176, 13, 223, 131, 57, 111,
					139, 195, 109, 88, 132, 179, 176, 51, 202, 145, 6, 215, 108, 195, 18, 221, 198, 173, 10, 37, 17, 11, 177, 31,
					173, 131, 154, 136, 195, 122, 168, 8, 125, 130, 9, 232, 133, 107, 208, 30, 221, 145, 141, 105, 40, 131, 107,
					78, 236, 134, 204, 152, 223, 117, 30, 127, 137, 174, 79, 173, 12, 231, 119, 216, 136, 52, 163, 214, 21, 167,
					161, 162, 116, 50, 224, 186, 179, 21, 226, 50, 152, 223, 210, 136, 191, 196, 205, 99, 86, 68, 226, 199, 152,
					137, 158, 70, 109, 4, 212, 255, 193, 215, 24, 3, 243, 253, 144, 252, 37, 186, 60, 185, 60, 82, 151, 225, 97,
					100, 33, 37, 168, 141, 69, 61, 212, 69, 178, 20, 55, 194, 126, 59, 36, 127, 137, 140, 209, 69, 209, 106, 135,
					27, 208, 34, 56, 255, 4, 149, 80, 49, 250, 6, 133, 232, 7, 251, 173, 176, 252, 37, 58, 143, 124, 51, 86, 9,
					198, 239, 203, 145, 143, 247, 160, 34, 112, 2, 37, 152, 136, 142, 48, 115, 163, 226, 47, 241, 195, 225, 111,
					92, 76, 151, 226, 86, 140, 194, 108, 20, 6, 22, 99, 58, 164, 158, 137, 246, 112, 205, 71, 233, 13, 239, 127,
					116, 176, 206, 234, 83, 7, 21, 63, 0, 0, 0, 0, 73, 69, 78, 68, 174, 66, 96, 130
				};
				using (var stream = new MemoryStream(data))
				{
					return Image.FromStream(stream);
				}
			}
		}

		/// <summary>
		/// 转换Image为Icon
		/// </summary>
		/// <param name="image">要转换为图标的Image对象</param>
		/// <param name="nullTonull">当image为null时是否返回null。false则抛空引用异常</param>
		/// <exception cref="ArgumentNullException" />
		public static Icon ConvertToIcon(Image image, bool nullTonull = false)
		{
			if (image == null)
			{
				if (nullTonull) { return null; }
				throw new ArgumentNullException("image");
			}

			using (MemoryStream msImg = new MemoryStream()
					 , msIco = new MemoryStream())
			{
				image.Save(msImg, ImageFormat.Png);

				using (var bin = new BinaryWriter(msIco))
				{
					//写图标头部
					bin.Write((short)0);      //0-1保留
					bin.Write((short)1);      //2-3文件类型。1=图标, 2=光标
					bin.Write((short)1);      //4-5图像数量（图标可以包含多个图像）

					bin.Write((byte)image.Width); //6图标宽度
					bin.Write((byte)image.Height); //7图标高度
					bin.Write((byte)0);      //8颜色数（若像素位深>=8，填0。这是显然的，达到8bpp的颜色数最少是256，byte不够表示）
					bin.Write((byte)0);      //9保留。必须为0
					bin.Write((short)0);      //10-11调色板
					bin.Write((short)32);     //12-13位深
					bin.Write((int)msImg.Length); //14-17位图数据大小
					bin.Write(22);         //18-21位图数据起始字节

					//写图像数据
					bin.Write(msImg.ToArray());

					bin.Flush();
					bin.Seek(0, SeekOrigin.Begin);
					return new Icon(msIco);
				}
			}
		}

		/// <summary>
		/// 图片转 byte[]
		/// </summary>
		/// <param name="Bitmap"></param>
		/// <returns></returns>
		public static byte[] BitmapToBytes(Bitmap Bitmap)
		{
			using (var ms = new MemoryStream())
			{
				Bitmap.Save(ms, Bitmap.RawFormat);
				byte[] byteImage = new Byte[ms.Length];
				byteImage = ms.ToArray();
				return byteImage;
			}
		}
	}
}
